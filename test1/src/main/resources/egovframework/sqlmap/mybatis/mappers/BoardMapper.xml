<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Board">
	<resultMap type="BoardVO" id="BoardMap">  
		<result column="id" property="id"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="user_id" property="user_id"/>
		<result column="created" property="created"/>
		<result column="updated" property="updated"/>
		<result column="deleted" property="deleted"/>
		<result column="isDeleted" property="isDeleted"/>
		<result column="deleteReason" property="deleteReason"/>
		<result column="isCompleted" property="isCompleted" />
		
	</resultMap>
	
	<select id="boardlistOrderHeart" parameterType="PagingVO" resultType="map">
		SELECT 
			board.id, 
			board.title,
			board.content,
			board.created,
			board.updated,
			user.user_id,
			user.name as user_name,
			IFNULL(heart.a,0) as count
		FROM
			boards_board as board
		LEFT OUTER JOIN
			(SELECT 
				Board_id,
				COUNT(*) AS a
			FROM
				hearts_heart 
			GROUP BY
				board_id) AS heart
		ON	
			board.id = heart.board_id
		INNER JOIN
			users_user as user
		ON
			board.user_id = user.user_id
		WHERE
			board.isDeleted != true 
			AND 
			board.isCompleted = true
		ORDER BY 
			count DESC, board.created DESC
		LIMIT #{perPage} OFFSET #{limitStart}
		
	
	
	</select>
	
	<select id="totalpage" resultType="int">
	
	SELECT
		COUNT(*)
	FROM 
		boards_board
	WHERE
		isDeleted != true 
		AND 
		isCompleted = true
	
	</select>
	
	<select id="mytotalpage" resultType="int">
	
	SELECT
		COUNT(*)
	FROM 
		boards_board
	WHERE
		user_id = #{user_id}
		AND
		isDeleted != true 
		AND 
		isCompleted = true
	
	</select>
	
	<select id="boardlistOrderCreated" parameterType="PagingVO" resultType="map">
		SELECT 
			board.id, 
			board.title,
			board.content,
			board.created,
			board.updated,
			user.user_id,
			user.name as user_name,
			IFNULL(heart.a,0) AS count
		FROM
			boards_board as board
		LEFT OUTER JOIN
			(SELECT 
				Board_id,
				COUNT(*) AS a
			FROM
				hearts_heart 
			GROUP BY
				board_id) AS heart
		ON	
			board.id = heart.board_id
		LEFT JOIN
			users_user as user
		ON
			board.user_id = user.user_id
		WHERE
			board.isDeleted != true 
			AND 
			board.isCompleted = true
		ORDER BY 
			board.created DESC
		LIMIT #{perPage} OFFSET #{limitStart}
	</select>
  	
  	<select id="selectboard" resultType="BoardVO">
		SELECT 
			board.id,
			board.title,
			board.content,
			user.user_id,
			board.created,
			board.updated,
			user.name as user_name
		FROM
			boards_board as board
		join
			users_user as user
		on
			user.user_id = board.user_id
		WHERE 
			id = #{id}
			AND
			board.isDeleted != true
	</select>
	
	<insert id="insertboard" parameterType="BoardVO" >
		<selectKey keyProperty="id" keyColumn="id" resultType="Long" order="BEFORE">
			SELECT MAX(id)+1 FROM boards_board
		</selectKey>
		INSERT INTO boards_board
			(id,title,content,created,user_id,isCompleted)
		VALUES
			(#{id},#{title},#{content},#{created},#{user_id},#{isCompleted}) 
	</insert>
	
	<insert id="insertBoardHeart" parameterType="BoardVO">
	
	INSERT INTO hearts_heart
		(heart_id,board_id,user_id)
	VALUES
		(#{heart_id},#{board_id},#{user_id})
	
	</insert>
	
	<update id="updateboard">
		UPDATE boards_board
		SET
			title=#{title},
			content=#{content},
			updated=#{updated}
		WHERE
			id=#{id}
	</update>
	
	<delete id="deleteboard">
		DELETE FROM boards_board
		WHERE id=#{id}
	
	</delete>
	
	<select id="selectMyPostBoard" resultType="BoardVO" parameterType="Map">
		
		SELECT
			board.id, 
			board.title,
			board.content,
			board.created,
			board.updated,
			user.user_id,
			user.name as user_name
		FROM 
			boards_board AS board
		JOIN
			users_user  AS user
		ON
			board.user_id = user.user_id
		WHERE
			board.user_id = #{user_id}
			AND
			NOT board.isDeleted = true
			AND
			board.isCompleted == true
		ORDER BY
			board.created DESC
		LIMIT #{pagingvo.perPage} OFFSET #{pagingvo.limitStart}
	
	
	</select>
	
	
	<insert id="insertFile" parameterType="hashMap">
		
		
		INSERT INTO files_file
			(file_id,board_id,ORG_FILE_NAME,STORED_FILE_NAME,FILE_SIZE,FILE_EXTENSION,created,category)
		VALUES
			(#{file_id},#{board_id},#{originalFileName},#{fileName},#{fileSize},#{fileExtension},#{created},#{category})
		<selectKey resultType="Long" keyProperty="file_id" keyColumn="file_id" order="AFTER">
    		SELECT LAST_INSERT_ID()
    	</selectKey>
    	
	</insert>
	
	<select id="selectSearchword" parameterType="hashMap" resultType="BoardVO">
	
	SELECT
			board.id, 
			board.title,
			board.content,
			board.created,
			board.updated,
			user.user_id,
			user.name as user_name
			
		FROM 
			boards_board AS board
		JOIN
			users_user  AS user
		ON
			board.user_id = user.user_id
		WHERE
			NOT board.isDeleted = true
			AND
			(board.title like CONCAT('%',#{word},'%') OR board.content like CONCAT('%',#{word},'%'))
			
		ORDER BY
			board.created DESC
		LIMIT #{pagingvo.perPage} OFFSET #{pagingvo.limitStart}
		
	
	</select>
	
	<select id="selectSearchwordpage" parameterType="hashMap" resultType="int">
	
	SELECT
		COUNT(*)
	FROM 
		boards_board
	WHERE
		NOT isDeleted = true
		AND
		(title like CONCAT('%',#{word},'%') OR content like CONCAT('%',#{word},'%'))
	
	
	</select>
	
	<update id="softdeleteboard" parameterType="BoardVO">
		UPDATE boards_board
		SET
			isDeleted=#{isDeleted},
			deleted=#{deleted}
		WHERE
			id=#{id}
	</update>
	
	<update id="deleteReason" parameterType="Map">
	
		UPDATE
		 
			boards_board
		
		SET
			deleteReason = #{deleteReason}
		WHERE
			id=#{id}
	
	</update>
	
	<!-- 삭제된 게시판 리스트 -->
	<select id="deletedBoardlist">
	SELECT
		board.board.id,
		board.title,
		board.content,
		
	FROM 
		boards_board AS board
	JOIN
		users_user AS user
	ON
		board.user_id = user.user_id
	WHERE
		isDeleted = true
	</select>
	
</mapper>
